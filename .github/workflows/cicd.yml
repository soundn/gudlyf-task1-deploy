name: CICD Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Clean workspace
        run: |
          sudo rm -rf $GITHUB_WORKSPACE/*
          sudo rm -rf $GITHUB_WORKSPACE/.[!.]*

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          clean: true
          fetch-depth: 0

      - name: Set correct permissions
        run: |
          sudo chown -R $USER:$USER $GITHUB_WORKSPACE
          sudo chmod -R 755 $GITHUB_WORKSPACE

      # ... [Previous steps remain unchanged] ...

      - name: Deploy to Kubernetes (Canary Deployment)
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}

      - name: Verify kubectl configuration
        run: |
          kubectl config view
          kubectl get nodes

      - name: Set Namespace
        run: |
          NAMESPACE="${{ github.event.inputs.environment || 'dev' }}"
          kubectl create namespace $NAMESPACE || true
          kubectl config set-context --current --namespace=$NAMESPACE

      - name: Checkout deployment repository
        uses: actions/checkout@v3
        with:
          repository: soundn/gudlyf-task1-deploy
          path: gudlyf-task1-deploy

      - name: Deploy Canary Version
        working-directory: gudlyf-task1-deploy
        run: |
          kubectl apply -f k8s/canary-deployment.yaml

      - name: Monitor Canary Deployment
        run: |
          kubectl rollout status deployment/canary-deployment --timeout=5m

      - name: Check Deployment Status
        id: deployment-status
        run: |
          kubectl get deployment canary-deployment -o json | jq '.status.conditions[] | select(.type=="Available").status' | grep True || exit 1

      - name: Rollback on Failure
        if: failure()
        run: |
          echo "Rolling back due to failed canary deployment"
          kubectl rollout undo deployment/canary-deployment
          exit 1

      - name: Promote to Production
        if: success()
        working-directory: gudlyf-task1-deploy
        run: |
          echo "Canary deployment successful, promoting to production"
          kubectl apply -f k8s/production-deployment.yaml

      - name: Deploy Services
        working-directory: gudlyf-task1-deploy
        run: |
          kubectl apply -f k8s/service.yaml